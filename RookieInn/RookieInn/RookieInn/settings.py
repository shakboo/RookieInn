#coding=utf-8
"""
Django settings for RookieInn project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 日志系统
LOG_PATH = os.path.join(BASE_DIR, 'stable_log')
if not os.path.join(LOG_PATH):
    os.mkdir(LOG_PATH)

LOGGING = {
    # 只能为1
    "version" : 1,
    # true则禁用logger
    "disable_existing_loggers" : False,
    # 格式化
    'formatters' : {
        'default' : {
            'format' : '%(levelno)s %(funcName)s %(module)s %(asctime)s %(message)s'
        },
        'simple' : {
            'format' : '%(levelno)s %(module)s %(created)s %(message)s'
        }
    },

    'handlers' : {
        'stable_handlers' : {
            'level' : 'DEBUG',
            'class' : 'logging.handlers.RotatingFileHandler',
            'maxBytes' : 5 * 1024 * 1024,
            'filename' : '%s/log.txt' % LOG_PATH,
            'formatter' : 'default'
        }
    },

    'loggers' : {
        'stable' : {
            'handlers' : ['stable_handlers'],
            'level' : 'INFO',
        }
    },

    # 一定要有即使是空的
    'filters' : {

    }
}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g9%jsb^s2&s3!8%1)78t9w^=i4c549@y(-5s23f6-^%^tg%i4q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Task',
    'Task.templatetags',
    'Stable',
    'vote',
    'Datum',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'RookieInn.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'RookieInn.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'RookieInn_Task',
        'USER': 'postgres',
        'PASSWORD' : 'zxb15988404537',
        'HOST' : '127.0.0.1',
        'PORT' : '5432',
    },
    'Stable':{
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'RookieInn_Stable',
        'USER': 'postgres',
        'PASSWORD' : 'zxb15988404537',
        'HOST' : '127.0.0.1',
        'PORT' : '5432',        
    }
}

DATABASE_ROUTERS = ['RookieInn.database_router.DatabaseAppsRouter']
DATABASE_APPS_MAPPING = {
    'Stable': 'Stable',
}
'''

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'RookieInn.db',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'Task.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/


LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

ALLOWED_HOSTS = ['*']

MEDIA_ROOT = '/upload/'